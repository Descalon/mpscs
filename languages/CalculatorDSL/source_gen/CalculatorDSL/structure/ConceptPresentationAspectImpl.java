package CalculatorDSL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Calculator;
  private ConceptPresentation props_Input;
  private ConceptPresentation props_InputReference;
  private ConceptPresentation props_Output;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Calculator:
        if (props_Calculator == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Calculator = cpb.create();
        }
        return props_Calculator;
      case LanguageConceptSwitch.Input:
        if (props_Input == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Input = cpb.create();
        }
        return props_Input;
      case LanguageConceptSwitch.InputReference:
        if (props_InputReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xc78e965abaf24f43L, 0x8d2083e096ac81b5L, 0x49159080d531d854L, 0x49159080d531d85eL, "input", "", "");
          props_InputReference = cpb.create();
        }
        return props_InputReference;
      case LanguageConceptSwitch.Output:
        if (props_Output == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Output");
          props_Output = cpb.create();
        }
        return props_Output;
    }
    return null;
  }
}
