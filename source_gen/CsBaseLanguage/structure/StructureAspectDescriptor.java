package CsBaseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptClass = createDescriptorForClass();
  /*package*/ final ConceptDescriptor myConceptClassMember = createDescriptorForClassMember();
  /*package*/ final ConceptDescriptor myConceptClassType = createDescriptorForClassType();
  /*package*/ final ConceptDescriptor myConceptCodeBlock = createDescriptorForCodeBlock();
  /*package*/ final ConceptDescriptor myConceptIStaticModifiableConcept = createDescriptorForIStaticModifiableConcept();
  /*package*/ final ConceptDescriptor myConceptIVisibilityModifiableConcept = createDescriptorForIVisibilityModifiableConcept();
  /*package*/ final ConceptDescriptor myConceptIntType = createDescriptorForIntType();
  /*package*/ final ConceptDescriptor myConceptMethodDefinition = createDescriptorForMethodDefinition();
  /*package*/ final ConceptDescriptor myConceptPrivateVisibilityModifier = createDescriptorForPrivateVisibilityModifier();
  /*package*/ final ConceptDescriptor myConceptProtectedVisibilityModifier = createDescriptorForProtectedVisibilityModifier();
  /*package*/ final ConceptDescriptor myConceptPublicVisibilityModifier = createDescriptorForPublicVisibilityModifier();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptStaticModifier = createDescriptorForStaticModifier();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final ConceptDescriptor myConceptVisibilityModifier = createDescriptorForVisibilityModifier();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptClass, myConceptClassMember, myConceptClassType, myConceptCodeBlock, myConceptIStaticModifiableConcept, myConceptIVisibilityModifiableConcept, myConceptIntType, myConceptMethodDefinition, myConceptPrivateVisibilityModifier, myConceptProtectedVisibilityModifier, myConceptPublicVisibilityModifier, myConceptStatement, myConceptStaticModifier, myConceptType, myConceptVisibilityModifier);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Class:
        return myConceptClass;
      case LanguageConceptSwitch.ClassMember:
        return myConceptClassMember;
      case LanguageConceptSwitch.ClassType:
        return myConceptClassType;
      case LanguageConceptSwitch.CodeBlock:
        return myConceptCodeBlock;
      case LanguageConceptSwitch.IStaticModifiableConcept:
        return myConceptIStaticModifiableConcept;
      case LanguageConceptSwitch.IVisibilityModifiableConcept:
        return myConceptIVisibilityModifiableConcept;
      case LanguageConceptSwitch.IntType:
        return myConceptIntType;
      case LanguageConceptSwitch.MethodDefinition:
        return myConceptMethodDefinition;
      case LanguageConceptSwitch.PrivateVisibilityModifier:
        return myConceptPrivateVisibilityModifier;
      case LanguageConceptSwitch.ProtectedVisibilityModifier:
        return myConceptProtectedVisibilityModifier;
      case LanguageConceptSwitch.PublicVisibilityModifier:
        return myConceptPublicVisibilityModifier;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.StaticModifier:
        return myConceptStaticModifier;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      case LanguageConceptSwitch.VisibilityModifier:
        return myConceptVisibilityModifier;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForClass() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "Class", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa448b56cL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402454380");
    b.version(2);
    b.aggregate("member", 0x7b67658aa44962aaL).target(0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa449646aL).optional(true).ordered(true).multiple(true).origin("8892187635402498730").done();
    b.alias("class");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassMember() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "ClassMember", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa449646aL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa449646eL);
    b.parent(0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44b7605L);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402499178");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "ClassType", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44afc63L);
    b.class_(false, false, false);
    b.super_("CsBaseLanguage.structure.Type", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44a6ca5L);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402603619");
    b.version(2);
    b.associate("class", 0x7b67658aa44afc64L).target(0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa448b56cL).optional(false).origin("8892187635402603620").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCodeBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "CodeBlock", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44a6d7eL);
    b.class_(false, false, false);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402567038");
    b.version(2);
    b.aggregate("statement", 0x7b67658aa44a6d7fL).target(0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44a6d82L).optional(true).ordered(true).multiple(true).origin("8892187635402567039").done();
    b.alias("{");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIStaticModifiableConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "IStaticModifiableConcept", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44b7605L);
    b.interface_();
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402634757");
    b.version(2);
    b.aggregate("staticModifier", 0x7b67658aa44b7606L).target(0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44b75f6L).optional(true).ordered(true).multiple(false).origin("8892187635402634758").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIVisibilityModifiableConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "IVisibilityModifiableConcept", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa449646eL);
    b.interface_();
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402499182");
    b.version(2);
    b.aggregate("visibilityModifier", 0x7b67658aa449646fL).target(0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44964a4L).optional(true).ordered(true).multiple(false).origin("8892187635402499183").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIntType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "IntType", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44a6ca9L);
    b.class_(false, false, false);
    b.super_("CsBaseLanguage.structure.Type", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44a6ca5L);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402566825");
    b.version(2);
    b.alias("int");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMethodDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "MethodDefinition", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44a6ca4L);
    b.class_(false, false, false);
    b.super_("CsBaseLanguage.structure.ClassMember", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa449646aL);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402566820");
    b.version(2);
    b.aggregate("returnValueType", 0x7b67658aa44a6cb0L).target(0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44a6ca5L).optional(false).ordered(true).multiple(false).origin("8892187635402566832").done();
    b.aggregate("body", 0x7b67658aa44a6e6cL).target(0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44a6d7eL).optional(true).ordered(true).multiple(false).origin("8892187635402567276").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrivateVisibilityModifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "PrivateVisibilityModifier", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44964b4L);
    b.class_(false, false, false);
    b.super_("CsBaseLanguage.structure.VisibilityModifier", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44964a4L);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402499252");
    b.version(2);
    b.alias("private");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProtectedVisibilityModifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "ProtectedVisibilityModifier", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44964bbL);
    b.class_(false, false, false);
    b.super_("CsBaseLanguage.structure.VisibilityModifier", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44964a4L);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402499259");
    b.version(2);
    b.alias("protected");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPublicVisibilityModifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "PublicVisibilityModifier", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44964a5L);
    b.class_(false, false, false);
    b.super_("CsBaseLanguage.structure.VisibilityModifier", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44964a4L);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402499237");
    b.version(2);
    b.alias("public");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "Statement", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44a6d82L);
    b.class_(false, false, false);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402567042");
    b.version(2);
    b.property("statement", 0x7b67658aa44a6d83L).type(PrimitiveTypeId.STRING).origin("8892187635402567043").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStaticModifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "StaticModifier", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44b75f6L);
    b.class_(false, false, false);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402634742");
    b.version(2);
    b.alias("static");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "Type", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44a6ca5L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402566821");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVisibilityModifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("CsBaseLanguage", "VisibilityModifier", 0x250303846d664bd0L, 0xbe085e945e7502b5L, 0x7b67658aa44964a4L);
    b.class_(false, false, false);
    b.origin("r:0267fbab-e3d2-4da7-9324-19ad37656571(CsBaseLanguage.structure)/8892187635402499236");
    b.version(2);
    return b.create();
  }
}
